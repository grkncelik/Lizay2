//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Lizay.dll.CaniasWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="iasWebServiceSoapBinding", Namespace="http://176.236.6.140:8080/CaniasWS-v1/services/iasWebService")]
    public partial class iasWebServiceImplService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback loginOperationCompleted;
        
        private System.Threading.SendOrPostCallback logoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback callIASServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback listIASServicesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public iasWebServiceImplService() {
            this.Url = global::Lizay.dll.Properties.Settings.Default.Lizay_dll_CaniasWS_iasWebServiceImplService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event loginCompletedEventHandler loginCompleted;
        
        /// <remarks/>
        public event logoutCompletedEventHandler logoutCompleted;
        
        /// <remarks/>
        public event callIASServiceCompletedEventHandler callIASServiceCompleted;
        
        /// <remarks/>
        public event listIASServicesCompletedEventHandler listIASServicesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://web.ias.com", ResponseNamespace="http://176.236.6.140:8080/CaniasWS-v1/services/iasWebService")]
        [return: System.Xml.Serialization.SoapElementAttribute("loginReturn")]
        public string login(string p_strClient, string p_strLanguage, string p_strDBName, string p_strDBServer, string p_strAppServer, string p_strUserName, string p_strPassword) {
            object[] results = this.Invoke("login", new object[] {
                        p_strClient,
                        p_strLanguage,
                        p_strDBName,
                        p_strDBServer,
                        p_strAppServer,
                        p_strUserName,
                        p_strPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void loginAsync(string p_strClient, string p_strLanguage, string p_strDBName, string p_strDBServer, string p_strAppServer, string p_strUserName, string p_strPassword) {
            this.loginAsync(p_strClient, p_strLanguage, p_strDBName, p_strDBServer, p_strAppServer, p_strUserName, p_strPassword, null);
        }
        
        /// <remarks/>
        public void loginAsync(string p_strClient, string p_strLanguage, string p_strDBName, string p_strDBServer, string p_strAppServer, string p_strUserName, string p_strPassword, object userState) {
            if ((this.loginOperationCompleted == null)) {
                this.loginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginOperationCompleted);
            }
            this.InvokeAsync("login", new object[] {
                        p_strClient,
                        p_strLanguage,
                        p_strDBName,
                        p_strDBServer,
                        p_strAppServer,
                        p_strUserName,
                        p_strPassword}, this.loginOperationCompleted, userState);
        }
        
        private void OnloginOperationCompleted(object arg) {
            if ((this.loginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginCompleted(this, new loginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://web.ias.com", ResponseNamespace="http://176.236.6.140:8080/CaniasWS-v1/services/iasWebService")]
        public void logout(string p_strSessionId) {
            this.Invoke("logout", new object[] {
                        p_strSessionId});
        }
        
        /// <remarks/>
        public void logoutAsync(string p_strSessionId) {
            this.logoutAsync(p_strSessionId, null);
        }
        
        /// <remarks/>
        public void logoutAsync(string p_strSessionId, object userState) {
            if ((this.logoutOperationCompleted == null)) {
                this.logoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlogoutOperationCompleted);
            }
            this.InvokeAsync("logout", new object[] {
                        p_strSessionId}, this.logoutOperationCompleted, userState);
        }
        
        private void OnlogoutOperationCompleted(object arg) {
            if ((this.logoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.logoutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://web.ias.com", ResponseNamespace="http://176.236.6.140:8080/CaniasWS-v1/services/iasWebService")]
        [return: System.Xml.Serialization.SoapElementAttribute("callIASServiceReturn")]
        public object callIASService(string sessionid, string serviceid, string args, string returntype, bool permanent) {
            object[] results = this.Invoke("callIASService", new object[] {
                        sessionid,
                        serviceid,
                        args,
                        returntype,
                        permanent});
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public void callIASServiceAsync(string sessionid, string serviceid, string args, string returntype, bool permanent) {
            this.callIASServiceAsync(sessionid, serviceid, args, returntype, permanent, null);
        }
        
        /// <remarks/>
        public void callIASServiceAsync(string sessionid, string serviceid, string args, string returntype, bool permanent, object userState) {
            if ((this.callIASServiceOperationCompleted == null)) {
                this.callIASServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OncallIASServiceOperationCompleted);
            }
            this.InvokeAsync("callIASService", new object[] {
                        sessionid,
                        serviceid,
                        args,
                        returntype,
                        permanent}, this.callIASServiceOperationCompleted, userState);
        }
        
        private void OncallIASServiceOperationCompleted(object arg) {
            if ((this.callIASServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.callIASServiceCompleted(this, new callIASServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://web.ias.com", ResponseNamespace="http://176.236.6.140:8080/CaniasWS-v1/services/iasWebService")]
        [return: System.Xml.Serialization.SoapElementAttribute("listIASServicesReturn")]
        public string[] listIASServices(string p_strSessionId) {
            object[] results = this.Invoke("listIASServices", new object[] {
                        p_strSessionId});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void listIASServicesAsync(string p_strSessionId) {
            this.listIASServicesAsync(p_strSessionId, null);
        }
        
        /// <remarks/>
        public void listIASServicesAsync(string p_strSessionId, object userState) {
            if ((this.listIASServicesOperationCompleted == null)) {
                this.listIASServicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistIASServicesOperationCompleted);
            }
            this.InvokeAsync("listIASServices", new object[] {
                        p_strSessionId}, this.listIASServicesOperationCompleted, userState);
        }
        
        private void OnlistIASServicesOperationCompleted(object arg) {
            if ((this.listIASServicesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listIASServicesCompleted(this, new listIASServicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void loginCompletedEventHandler(object sender, loginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void logoutCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void callIASServiceCompletedEventHandler(object sender, callIASServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class callIASServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal callIASServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void listIASServicesCompletedEventHandler(object sender, listIASServicesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listIASServicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listIASServicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591